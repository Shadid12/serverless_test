service: shop-api

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1

  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "Fn::GetAtt": [ CartsTable, Arn ]
        - "Fn::GetAtt": [ ProductsTable, Arn ]

functions:
  create-cart:
    handler: create-cart.main
    events:
      - http:
          path: carts
          method: post
          cors: true
          authorizer: aws_iam
  all-carts:
    handler: all-carts.main
    events:
      - http:
          path: carts
          method: get
          cors: true
          authorizer: aws_iam
  create-products:
    handler: create-products.main
    events:
      - http:
          path: carts
          method: post
          cors: true
          authorizer: aws_iam


resources:
  Resources:
    # CREATE CARTS TABLE
    CartsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: carts
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: cartId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: cartId
            KeyType: RANGE
        # Set the capacity to auto-scale
        BillingMode: PAY_PER_REQUEST

    # CREATE PRODUCTS TABLE
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
          - AttributeName: price
            AttributeType: N
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
          - AttributeName: price
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    
    # API GATEWAY 
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDefault5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'*'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'